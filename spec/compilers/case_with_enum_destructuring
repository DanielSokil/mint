enum A(a) {
  B(a)
}

enum C(a) {
  D(A(a))
}

component Main {
  fun test (b : C(a)) : a {
    case (b) {
      C::D a =>
        case (a) {
          A::B c =>
            c
        }
    }
  }

  fun render : String {
    try {
      test(C::D(A::B("")))

      ""
    }
  }
}
--------------------------------------------------------------------------------
class B extends _E {
  constructor(_0) {
    super()
    this._0 = _0
    this.length = 1
  }
}

class C extends _E {
  constructor(_0) {
    super()
    this._0 = _0
    this.length = 1
  }
}

class A extends _C {
  a(b) {
    return (() => {
      let c = b

      if (c instanceof C) {
        const d = c._0

        return (() => {
          let e = d

          if (e instanceof B) {
            const f = e._0
            return f
          }
        })()
      }
    })()
  }

  render() {
    return (() => {
      this.a(new C(new B(``)))
      return ``
    })()
  }
}

A.displayName = "Main"
