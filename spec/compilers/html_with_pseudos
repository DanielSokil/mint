component Main {
  property hoverBackground : String = "yellow"
  property background : String = "blue"

  style test {
    background: {background};
    color: red;

    &:hover {
      background: {hoverBackground};
      color: cyan;
    }

    & div {
      font-family: {"Hello"};
      color: blue;
    }
  }

  fun render : Html {
    <div::test>
    </div>
  }
}
--------------------------------------------------------------------------------
class $Main extends Component {
  get hoverBackground() {
    if (this.props.hoverBackground != undefined) {
      return this.props.hoverBackground
    } else {
      return `yellow`
    }
  }

  get background() {
    if (this.props.background != undefined) {
      return this.props.background
    } else {
      return `blue`
    }
  }

  render() {
    return _createElement("div", {
      className: `main-test`,
      style: {
        [`--main-test-background`]: this.background,
        [`--main-test-hover-background`]: this.hoverBackground,
        [`--main-test-div-font-family`]: `Hello`
      }
    })
  }
}

$Main.displayName = "Main"

_insertStyles(`
  .main-test {
    background: var(--main-test-background);
    color: red;
  }

  .main-test:hover {
    background: var(--main-test-hover-background);
    color: cyan;
  }

  .main-test div {
    font-family: var(--main-test-div-font-family);
    color: blue;
  }
`)
